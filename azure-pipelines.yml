# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
    - release/*
  paths:
    include:
    - src
    - test
    - Darty.sln
    - azure-pipelines.yml

pool:
  vmImage: windows-latest

variables:
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/users/')]
  isMasterOrRelease: $[or(eq(variables.isMaster, true), eq(variables.isRelease, true))]

stages:
- stage: Build
  jobs:
  - job: restore
    steps:  
    - task: UseDotNet@3.1
      displayName: 'Use .NET Core sdk 3.1.x'
      inputs:
        packageType: sdk
        version: 3.1.x

    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: 'restore'
        projects: '**/Darty.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: 'build'
        projects: '**/Darty.sln'
        arguments: '-c Release --no-restore'

- stage: DEV
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isMasterOrRelease, true))
  jobs:
  - job: functions
  - job: web

- stage: PROD
  condition: and(succeeded(), eq(variables.isRelease, true))
  jobs:
  - job: functions
  - job: web

